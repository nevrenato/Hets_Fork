{-# OPTIONS -w -O0 #-}
{- |
Module      :  Hybrid/ATC_Hybrid.der.hs
Description :  generated Typeable, ShATermConvertible instances
Copyright   :  (c) DFKI Bremen 2008
License     :  GPLv2 or higher, see LICENSE.txt

Maintainer  :  Christian.Maeder@dfki.de
Stability   :  provisional
Portability :  non-portable(overlapping Typeable instances)

Automatic derivation of instances via DrIFT-rule Typeable, ShATermConvertible
  for the type(s):
'Hybrid.AS_Hybrid.H_BASIC_ITEM'
'Hybrid.AS_Hybrid.RIGOR'
'Hybrid.AS_Hybrid.H_SIG_ITEM'
'Hybrid.AS_Hybrid.MODALITY'
'Hybrid.AS_Hybrid.NOMINAL'
'Hybrid.AS_Hybrid.H_FORMULA'
'Hybrid.HybridSign.HybridSign'
-}

{-
  Generated by 'genRules' (automatic rule generation for DrIFT). Don't touch!!
  dependency files:
Hybrid/AS_Hybrid.hs
Hybrid/HybridSign.hs
-}

module Hybrid.ATC_Hybrid () where

import ATerm.Lib
import CASL.AS_Basic_CASL
import CASL.ATC_CASL
import CASL.Sign
import Common.AS_Annotation
import Common.Id
import Data.Typeable
import Hybrid.AS_Hybrid
import Hybrid.HybridSign
import qualified Common.Lib.MapSet as MapSet
import qualified Data.List as List
import qualified Data.Map as Map

{-! for Hybrid.AS_Hybrid.H_BASIC_ITEM derive : Typeable !-}
{-! for Hybrid.AS_Hybrid.RIGOR derive : Typeable !-}
{-! for Hybrid.AS_Hybrid.H_SIG_ITEM derive : Typeable !-}
{-! for Hybrid.AS_Hybrid.MODALITY derive : Typeable !-}
{-! for Hybrid.AS_Hybrid.NOMINAL derive : Typeable !-}
{-! for Hybrid.AS_Hybrid.H_FORMULA derive : Typeable !-}
{-! for Hybrid.HybridSign.HybridSign derive : Typeable !-}

{-! for Hybrid.AS_Hybrid.H_BASIC_ITEM derive : ShATermConvertible !-}
{-! for Hybrid.AS_Hybrid.RIGOR derive : ShATermConvertible !-}
{-! for Hybrid.AS_Hybrid.H_SIG_ITEM derive : ShATermConvertible !-}
{-! for Hybrid.AS_Hybrid.MODALITY derive : ShATermConvertible !-}
{-! for Hybrid.AS_Hybrid.NOMINAL derive : ShATermConvertible !-}
{-! for Hybrid.AS_Hybrid.H_FORMULA derive : ShATermConvertible !-}
{-! for Hybrid.HybridSign.HybridSign derive : ShATermConvertible !-}
