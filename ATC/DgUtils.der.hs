{-# OPTIONS -w -O0 #-}
{- |
Module      :  ATC/DgUtils.der.hs
Description :  generated Typeable, ShATermLG instances
Copyright   :  (c) DFKI Bremen 2008
License     :  GPLv2 or higher, see LICENSE.txt

Maintainer  :  Christian.Maeder@dfki.de
Stability   :  provisional
Portability :  non-portable(overlapping Typeable instances)

Automatic derivation of instances via DrIFT-rule Typeable, ShATermLG
  for the type(s):
'Static.DgUtils.XPathPart'
'Static.DgUtils.NodeName'
'Static.DgUtils.DGNodeType'
'Static.DgUtils.NodeMod'
'Static.DgUtils.EdgeId'
'Static.DgUtils.ProofBasis'
'Static.DgUtils.DGRule'
'Static.DgUtils.ThmLinkStatus'
'Static.DgUtils.Scope'
'Static.DgUtils.LinkKind'
'Static.DgUtils.FreeOrCofree'
'Static.DgUtils.ConsStatus'
'Static.DgUtils.DGEdgeType'
'Static.DgUtils.DGEdgeTypeModInc'
'Static.DgUtils.ThmTypes'
'Static.DgUtils.RTPointer'
'Static.DgUtils.RTLeaves'
-}

{-
  Generated by 'genRules' (automatic rule generation for DrIFT). Don't touch!!
  dependency files:
Static/DgUtils.hs
-}

module ATC.DgUtils () where

import ATC.Consistency
import ATC.Grothendieck
import ATC.LibName
import ATerm.Lib
import Common.Consistency
import Common.IRI (IRI, nullIRI, iriToStringShortUnsecure, parseCurie)
import Common.LibName
import Common.Utils (numberSuffix, splitByList, splitOn, readMaybe)
import Data.Graph.Inductive.Graph (Node)
import Data.List
import Data.Maybe
import Data.Typeable
import Static.DgUtils
import qualified Common.Lib.Rel as Rel
import qualified Data.Map as Map
import qualified Data.Set as Set

{-! for Static.DgUtils.XPathPart derive : Typeable !-}
{-! for Static.DgUtils.NodeName derive : Typeable !-}
{-! for Static.DgUtils.DGNodeType derive : Typeable !-}
{-! for Static.DgUtils.NodeMod derive : Typeable !-}
{-! for Static.DgUtils.EdgeId derive : Typeable !-}
{-! for Static.DgUtils.ProofBasis derive : Typeable !-}
{-! for Static.DgUtils.DGRule derive : Typeable !-}
{-! for Static.DgUtils.ThmLinkStatus derive : Typeable !-}
{-! for Static.DgUtils.Scope derive : Typeable !-}
{-! for Static.DgUtils.LinkKind derive : Typeable !-}
{-! for Static.DgUtils.FreeOrCofree derive : Typeable !-}
{-! for Static.DgUtils.ConsStatus derive : Typeable !-}
{-! for Static.DgUtils.DGEdgeType derive : Typeable !-}
{-! for Static.DgUtils.DGEdgeTypeModInc derive : Typeable !-}
{-! for Static.DgUtils.ThmTypes derive : Typeable !-}
{-! for Static.DgUtils.RTPointer derive : Typeable !-}
{-! for Static.DgUtils.RTLeaves derive : Typeable !-}

{-! for Static.DgUtils.XPathPart derive : ShATermLG !-}
{-! for Static.DgUtils.NodeName derive : ShATermLG !-}
{-! for Static.DgUtils.DGNodeType derive : ShATermLG !-}
{-! for Static.DgUtils.NodeMod derive : ShATermLG !-}
{-! for Static.DgUtils.EdgeId derive : ShATermLG !-}
{-! for Static.DgUtils.ProofBasis derive : ShATermLG !-}
{-! for Static.DgUtils.DGRule derive : ShATermLG !-}
{-! for Static.DgUtils.ThmLinkStatus derive : ShATermLG !-}
{-! for Static.DgUtils.Scope derive : ShATermLG !-}
{-! for Static.DgUtils.LinkKind derive : ShATermLG !-}
{-! for Static.DgUtils.FreeOrCofree derive : ShATermLG !-}
{-! for Static.DgUtils.ConsStatus derive : ShATermLG !-}
{-! for Static.DgUtils.DGEdgeType derive : ShATermLG !-}
{-! for Static.DgUtils.DGEdgeTypeModInc derive : ShATermLG !-}
{-! for Static.DgUtils.ThmTypes derive : ShATermLG !-}
{-! for Static.DgUtils.RTPointer derive : ShATermLG !-}
{-! for Static.DgUtils.RTLeaves derive : ShATermLG !-}
