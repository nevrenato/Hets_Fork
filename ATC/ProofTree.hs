{-# OPTIONS -w -O0 #-}
{- |
Module      :  ATC/ProofTree.der.hs
Description :  generated Typeable, ShATermConvertible instances
Copyright   :  (c) DFKI Bremen 2008
License     :  GPLv2 or higher, see LICENSE.txt

Maintainer  :  Christian.Maeder@dfki.de
Stability   :  provisional
Portability :  non-portable(overlapping Typeable instances)

Automatic derivation of instances via DrIFT-rule Typeable, ShATermConvertible
  for the type(s):
'Common.ProofTree.ProofTree'
-}

{-
  Generated by 'genRules' (automatic rule generation for DrIFT). Don't touch!!
  dependency files:
Common/ProofTree.hs
-}

module ATC.ProofTree () where

import ATerm.Lib
import Common.ProofTree
import Data.Typeable

{-! for Common.ProofTree.ProofTree derive : Typeable !-}

{-! for Common.ProofTree.ProofTree derive : ShATermConvertible !-}

-- Generated by DrIFT, look but don't touch!

_tcProofTreeTc :: TyCon
_tcProofTreeTc = mkTyCon "Common.ProofTree.ProofTree"
instance Typeable ProofTree where
    typeOf _ = mkTyConApp _tcProofTreeTc []

instance ShATermConvertible ProofTree where
  toShATermAux att0 xv = case xv of
    ProofTree a -> do
      (att1, a') <- toShATerm' att0 a
      return $ addATerm (ShAAppl "ProofTree" [a'] []) att1
  fromShATermAux ix att0 = case getShATerm ix att0 of
    ShAAppl "ProofTree" [a] _ ->
      case fromShATerm' a att0 of
      { (att1, a') ->
      (att1, ProofTree a') }
    u -> fromShATermError "ProofTree" u
