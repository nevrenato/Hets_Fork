%read "../../type_theories/stt.elf".
%read "../first-order/proof_theory/sifol.elf".
%read "../propositional/proof_theory/derived.elf".

%{ 
STTIFOLEQ is a meta-logic used to represent model theory. It is composed 
of simple type theory (STT) equipped with external intuitionistic 
first-order logic, i.e., propositions are not STT-terms.

We call this meta-logic "HOL" in the paper "Representing Model-Theory in a Type-Theoretical Logical Framework"
}%

%% This view interprets the intensional equality from type theory in terms of the extensional one in sorted logic. 
%view IntExt : Level -> SEqualPF = {
   cl  := sort.
   exp := [A] tm A.
   ==  := [A][X][Y] ded X eq Y.
   refl := [A][X] refl.
   sym  := [A][X][Y][p] sym p.
   trans:= [A][X][Y][Z][p][q] trans p q.
   cong := [A][X][Y][B][F][p] congF F p.
}.

%sig STTIFOLEQ = {
  %include SIFOLEQPF %open.
  %include PLPFExt   %open.
  %struct fun : SimpFun = {%struct level := IntExt.} %open → λ @ ; ∘ beta.

  %% commonly used abbreviations
  set  =  sort.
  elem = [x] tm x.
}.
