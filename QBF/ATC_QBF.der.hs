{-# OPTIONS -w -O0 #-}
{- |
Module      :  QBF/ATC_QBF.der.hs
Description :  generated Typeable, ShATermConvertible instances
Copyright   :  (c) DFKI Bremen 2008
License     :  GPLv2 or higher, see LICENSE.txt

Maintainer  :  Christian.Maeder@dfki.de
Stability   :  provisional
Portability :  non-portable(overlapping Typeable instances)

Automatic derivation of instances via DrIFT-rule Typeable, ShATermConvertible
  for the type(s):
'Propositional.Sign.Sign'
'QBF.Morphism.Morphism'
'QBF.AS_BASIC_QBF.PREDITEM'
'QBF.AS_BASIC_QBF.BASICSPEC'
'QBF.AS_BASIC_QBF.BASICITEMS'
'QBF.AS_BASIC_QBF.FORMULA'
'QBF.AS_BASIC_QBF.ID'
'QBF.AS_BASIC_QBF.SYMBITEMS'
'QBF.AS_BASIC_QBF.SYMB'
'QBF.AS_BASIC_QBF.SYMBMAPITEMS'
'QBF.AS_BASIC_QBF.SYMBORMAP'
'QBF.Symbol.Symbol'
'QBF.Sublogic.QBFFormulae'
'QBF.Sublogic.QBFSL'
-}

{-
  Generated by 'genRules' (automatic rule generation for DrIFT). Don't touch!!
  dependency files:
Propositional/Sign.hs
QBF/Morphism.hs
QBF/AS_BASIC_QBF.hs
QBF/Symbol.hs
QBF/Sublogic.hs
-}

module QBF.ATC_QBF () where

import ATC.AS_Annotation
import ATerm.Lib
import Common.AS_Annotation as AS_Anno
import Common.Doc
import Common.DocUtils
import Common.Id
import Common.Id as Id
import Common.Keywords
import Common.Result
import Control.Monad (unless)
import Data.Maybe (isJust)
import Data.Typeable
import Propositional.Sign
import Propositional.Sign as Sign
import QBF.AS_BASIC_QBF
import QBF.Morphism
import QBF.Morphism as Morphism
import QBF.Sublogic
import QBF.Symbol
import qualified Common.AS_Annotation as AS_Anno
import qualified Common.Id as Id
import qualified Common.Lib.State as State
import qualified Common.Result as Result
import qualified Data.List as List
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Propositional.Sign as Sign
import qualified QBF.AS_BASIC_QBF as AS_BASIC
import qualified QBF.Morphism as Morphism
import qualified QBF.Symbol as Symbol
import qualified QBF.Tools as Tools

{-! for Propositional.Sign.Sign derive : Typeable !-}
{-! for QBF.Morphism.Morphism derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.PREDITEM derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.BASICSPEC derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.BASICITEMS derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.FORMULA derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.ID derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.SYMBITEMS derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.SYMB derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.SYMBMAPITEMS derive : Typeable !-}
{-! for QBF.AS_BASIC_QBF.SYMBORMAP derive : Typeable !-}
{-! for QBF.Symbol.Symbol derive : Typeable !-}
{-! for QBF.Sublogic.QBFFormulae derive : Typeable !-}
{-! for QBF.Sublogic.QBFSL derive : Typeable !-}

{-! for Propositional.Sign.Sign derive : ShATermConvertible !-}
{-! for QBF.Morphism.Morphism derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.PREDITEM derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.BASICSPEC derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.BASICITEMS derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.FORMULA derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.ID derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.SYMBITEMS derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.SYMB derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.SYMBMAPITEMS derive : ShATermConvertible !-}
{-! for QBF.AS_BASIC_QBF.SYMBORMAP derive : ShATermConvertible !-}
{-! for QBF.Symbol.Symbol derive : ShATermConvertible !-}
{-! for QBF.Sublogic.QBFFormulae derive : ShATermConvertible !-}
{-! for QBF.Sublogic.QBFSL derive : ShATermConvertible !-}
